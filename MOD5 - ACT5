#include <stdio.h>
#include <stdlib.h>

struct node {
    int item;
    struct node* left;
    struct node* right;
};


void preorder(struct node* root) {
    if (root == NULL) return;
    printf("%d ", root->item);
    preorder(root->left);
    preorder(root->right);
}


void postorder(struct node* root) {
    if (root == NULL) return;
    postorder(root->left);
    postorder(root->right);
    printf("%d ", root->item);
}


void inorder(struct node* root) {
    if (root == NULL) return;
    inorder(root->left);
    printf("%d ", root->item);
    inorder(root->right);
}


struct node* createNode(value) {
    struct node* newNode = malloc(sizeof(struct node));
    newNode->item = value;
    newNode->left = NULL;
    newNode->right = NULL;

    return newNode;
}


struct node* insertLeft(struct node* root, int value) {
    root->left = createNode(value);
    return root->left;
}


struct node* insertRight(struct node* root, int value) {
    root->right = createNode(value);
    return root->right;
}

int main() {
    struct node* root = createNode(5);
    insertLeft(root, 69);
    insertRight(root, 420);
    insertLeft(root->left, 34);
    insertRight(root->left, 8);


    printf("\nPreorder traversal \n");
    preorder(root);

    printf("\nPostorder traversal \n");
    postorder(root);

    printf("\nInorder traversal \n");
    inorder(root);
}
